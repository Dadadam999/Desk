<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="arrowparent.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>